<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:L3.Cargo.Workstation.PresentationCore">

    <RadialGradientBrush
        x:Key="TabBackground"
        GradientOrigin="0, 0"
        Center="0,0" RadiusX="1" RadiusY="1">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#DDDDDD" Offset="0"></GradientStop>
            <GradientStop Color="#EEEEEE" Offset="1"></GradientStop>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <RadialGradientBrush
        x:Key="TabSelectedBackground"
        GradientOrigin="0, 0"
        Center="0,0" RadiusX="1" RadiusY="1">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="Maroon" Offset="0"></GradientStop>
            <GradientStop Color="#AB0B23" Offset="1"></GradientStop>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <Style x:Key="MainPanelGridRow" TargetType="{x:Type RowDefinition}">
        <Setter Property="Height" Value="*" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=MainTabControl, Path=Content.Items.Count}" Value="0">
                <Setter Property="Height" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SubPanelGridRow" TargetType="{x:Type RowDefinition}">
        <Setter Property="Height" Value="200" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=SubTabControl, Path=Content.Items.Count}" Value="0">
                <Setter Property="Height" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InfoPanelExpander" TargetType="{x:Type Expander}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Margin" Value="10,10,0,10" />
        <Setter Property="ExpandDirection" Value="Right" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=InfoTabControl, Path=Content.Items.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabItemTemplate" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border 
                            Name="Border"
                            Margin="5,5,5,0"
                            BorderBrush="Black" 
                            Background="{StaticResource TabBackground}"
                            BorderThickness="1,1,1,1" 
                            CornerRadius="3">
                            <DockPanel x:Name="ContentPanel">
                                <local:CloseTabItemButton Background="White" x:Name="PART_Close" HorizontalAlignment="Center" Margin="3,0,3,0" VerticalAlignment="Center" Width="14" Height="14" DockPanel.Dock="Right" ToolTip="Close Tab">
                                    <Path x:Name="Path" Stretch="Fill" StrokeThickness="0.5" Stroke="#AB0B23" Fill="#AB0B23" Data="F1 M 2.28484e-007,1.33331L 1.33333,0L 4.00001,2.66669L 6.66667,6.10352e-005L 8,1.33331L 5.33334,4L 8,6.66669L 6.66667,8L 4,5.33331L 1.33333,8L 1.086e-007,6.66669L 2.66667,4L 2.28484e-007,1.33331 Z " HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                </local:CloseTabItemButton>
                                <ContentPresenter x:Name="ContentSite"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  ContentSource="Header"
                                  Margin="12,2,5,2"
                                  RecognizesAccessKey="True"/>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource TabSelectedBackground}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_Close" Value="True">
                            <Setter Property="Fill" TargetName="Path" Value="#FFFF0000"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="PART_Close" Value="True">
                            <Setter Property="Fill" TargetName="Path" Value="#FFFF0000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel>
                        <DockPanel Height="Auto" Width="Auto">
                            <Expander Style="{StaticResource InfoPanelExpander}" IsExpanded="True">
                                <DockPanel Width="300">
                                    <ContentControl Name="InfoTabControl" Content="{Binding InfoTabControl, Mode=OneTime}" />
                                </DockPanel>
                            </Expander>
                            <Grid Margin="10,10,10,10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Style="{StaticResource MainPanelGridRow}" />
                                    <RowDefinition Style="{StaticResource SubPanelGridRow}" />
                                </Grid.RowDefinitions>
                                <DockPanel Grid.Column="0" Grid.Row="0" Height="Auto">
                                    <ContentControl Name="MainTabControl" Content="{Binding MainTabControl, Mode=OneTime}" />
                                </DockPanel>
                                <DockPanel Grid.Column="0" Grid.Row="1">
                                    <ContentControl Name="SubTabControl" Content="{Binding SubTabControl, Mode=OneTime}" />
                                </DockPanel>
                            </Grid>
                        </DockPanel>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DockPanel}">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Children.Count}" Value="0">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CompareGridRow" TargetType="{x:Type RowDefinition}">
        <Setter Property="Height" Value="*" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=CompareTabControl, Path=Items.Count}" Value="0">
                <Setter Property="Height" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <LinearGradientBrush
        x:Key="ButtonBackground"
        StartPoint="0.5, 0" EndPoint="0.5, 1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#AB0B23" Offset="0"></GradientStop>
            <GradientStop Color="Maroon" Offset=".5"></GradientStop>
            <GradientStop Color="#AB0B23" Offset="1"></GradientStop>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>


    <LinearGradientBrush
        x:Key="ServerButtonBackground"
        StartPoint="0.5, 0" EndPoint="0.5, 1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#E24242" Offset="0"></GradientStop>
            <GradientStop Color="#9F2D2D" Offset="0.5"></GradientStop>
            <GradientStop Color="#E24242" Offset="0"></GradientStop>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="ServerButtons" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#A1312F" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ServerButtonBackground}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#A1312F" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource ServerButtonBackground}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#A1312F" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AboutBoxButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Panel" x:Key="Animatedpanel">
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0.0" To="1.0" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DockPanel" x:Key="GridViewPanel" BasedOn="{StaticResource Animatedpanel}">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=Source_dataGrid, Path=DataContext}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DockPanel" x:Key="WarningPanel" BasedOn="{StaticResource Animatedpanel}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=GridViewPanel, Path=Visibility}" Value="Collapsed" />
                    <Condition Binding="{Binding ElementName=LoginPanel, Path=Visibility}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
 
</ResourceDictionary>